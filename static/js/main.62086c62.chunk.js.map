{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","userId","TodoList","todos","map","getUser","usersFromServer","find","title","completed","App","useState","todoList","setTodoList","setTitle","setUserId","onSubmit","event","preventDefault","task","length","type","placeholder","value","onChange","target","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62086c62.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n// import { User } from '../../types/User';\n\n// import usersFromServer from '../../api/users';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n    <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n    {todo.user && (\n      <UserInfo user={todo.user} key={todo.userId} />\n    )}\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} data-id={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [todoList, setTodoList] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  function createNewTask(event: React.FormEvent) {\n    event.preventDefault();\n\n    const task = {\n      id: todoList.length,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodoList([...todoList, task]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={createNewTask}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n            />\n          </label>\n          <span className=\"error\">Please enter a title</span>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => setUserId(+event.target.value)}\n            >\n              <option value={0}>Choose a user</option>\n\n              {usersFromServer.map(person => (\n                <option value={person.id} key={person.id}>\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <span className=\"error\">Please choose a user</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
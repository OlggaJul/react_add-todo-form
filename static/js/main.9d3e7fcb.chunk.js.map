{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","userId","TodoList","todos","map","getUser","usersFromServer","find","App","useState","todoList","setTodoList","setTitle","setUserId","noTitleError","setNoTitleError","noUserError","setNoUserError","onSubmit","event","preventDefault","prevList","taskList","newTask","Math","max","task","type","placeholder","value","onChange","newValue","target","person","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d3e7fcb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && (\n      <UserInfo user={todo.user} key={todo.userId} />\n    )}\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [noTitleError, setNoTitleError] = useState(false);\n  const [noUserError, setNoUserError] = useState(false);\n\n  const getId = (taskList: { id: number }[]) => (\n    (Math.max(...taskList.map(task => task.id)) + 1)\n  );\n\n  const handleChangeTitle = (newValue: string) => {\n    setTitle(newValue);\n    setNoTitleError(false);\n  };\n\n  const handleChangeUser = (newValue: number) => {\n    setUserId(newValue);\n    setNoUserError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title || !userId) {\n      setNoTitleError(!title);\n      setNoUserError(!userId);\n\n      return;\n    }\n\n    if (!userId) {\n      setNoUserError(true);\n\n      return;\n    }\n\n    setTodoList(prevList => {\n      const newTask = {\n        id: getId(prevList),\n        title,\n        userId,\n        completed: false,\n        user: getUser(userId),\n      };\n\n      return ([...todoList, newTask]);\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => handleChangeTitle(event.target.value)}\n            />\n          </label>\n\n          {noTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => handleChangeUser(+event.target.value)}\n            >\n              <option value={0}>Choose a user</option>\n\n              {usersFromServer.map(person => (\n                <option value={person.id} key={person.id}>\n                  {person.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {noUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}